import os
import time
import uuid

import telebot
import config
from PIL import Image

from face.face import recognize

bot = telebot.TeleBot(config.TOKEN)
statuses = {}  # statuses[user] = user_status
titles = {}  # titles[user] = user_title
emojis = ['üòÇ', 'üòç', 'ü§Ø', 'üò¢', 'ü§©', 'üò¥', 'üí°', '‚òÅÔ∏è', 'ü§ß', 'ü•≥', 'ü•∞', 'üò§', 'üòò', 'ü§¨', 'üòÖ', 'üëç', 'üëé', '‚úåÔ∏è',
          'ü§≠', 'üëä', 'üëê', 'ü§û', 'ü§´', 'ü§î', 'üòú', 'üòß', 'üôÑ', 'üò≥', 'üò°', 'üòÉ', 'üòî', 'üòâ', 'üëã', 'ü§ô', '‚ù§Ô∏è', 'üò¨',
          'üôã‚Äç‚ôÄÔ∏è', 'üòå', 'üòè', 'üíÅ‚Äç‚ôÄÔ∏è', 'üôè', 'üôÖ‚Äç‚ôÄÔ∏è', 'üë©‚Äçüíª', 'ü§¶‚Äç‚ôÄÔ∏è', 'ü§∑‚Äç‚ôÄÔ∏è']


@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç!üëã\n\n –Ø —Å—Ç–∏–∫–µ—Ä-–±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö memoji.\n\n –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å '
                     '—Å–≤–æ–π —Å—Ç–∏–∫–µ—Ä-–ø–∞–∫, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /createstickerpack .')


@bot.message_handler(commands=['createstickerpack'])
def init_creation(message):
    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–µ —Ñ–æ—Ç–æ. \n\n–ï—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π:\n'
                                      '‚úÖÔ∏è –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±—ã–ª–æ –æ–¥–Ω–æ –ª–∏—Ü–æ;\n'
                                      '‚úÖÔ∏è –¥–ª—è –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏ —Å–¥–µ–ª–∞–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏.\n\n'
                                      '–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:')
    bot.send_photo(message.chat.id, open(r'example.jpg', 'rb'))
    statuses[message.chat.id] = 'init'


@bot.message_handler(content_types=['text'])
def unrecognized_message(message):

    if statuses.get(message.chat.id) == 'preparing stickerpack':
        bot.send_message(message.chat.id, '–ü–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é, —Å–æ–±–∏—Ä–∞—é —Ç–≤–æ–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å '
                                          '–Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.')
        return

    if statuses.get(message.chat.id) != 'waiting title':
        bot.send_message(message.chat.id, '–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è üò£ \n–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É '
                                          '/createstickerpack')
        return

    titles[message.chat.id] = message.text
    statuses[message.chat.id] = 'preparing stickerpack'


i = 34  # —É–±—Ä–∞—Ç—å


@bot.message_handler(content_types=['sticker'])
# —É–±—Ä–∞—Ç—å, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Å–æ–±–µ—Ä–µ–º –≤—Å–µ —Å—Ç–∏–∫–æ—Å—ã
def collect_stickers(message):
    global i
    user_photo_id = message.sticker.file_id
    file_info = bot.get_file(user_photo_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open("sticker.webp", 'wb') as user_photo:
        user_photo.write(downloaded_file)
    user_photo.close()
    user_photo = Image.open("sticker.webp")
    user_photo.save(r'dump\\' + str(i) + '.webp')
    user_photo.close()
    bot.send_message(message.chat.id, str(i))
    i += 1


@bot.message_handler(commands=['undo'])
def del_previous(message):
    global i
    i -= 1
    bot.send_message(message.chat.id, '–ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å—Ç–∏–∫–µ—Ä:')
    bot.send_sticker(message.chat.id, open(r'dump/' + str(i) + '.webp', 'rb'))


@bot.message_handler(content_types=['photo'])
def create_stickerpack(message):

    if statuses.get(message.chat.id) is None or statuses[message.chat.id] != 'init':
        bot.send_message(message.chat.id, '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /createstickerpack')
        return

    bot.send_message(message.chat.id, '–ö—Ä—É—Ç–æ! –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–¥—É–º–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ üëá')
    statuses[message.chat.id] = 'waiting title'

    user_photo_id = message.photo[-1].file_id
    file_info = bot.get_file(user_photo_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open("image.png", 'wb') as user_photo:
        user_photo.write(downloaded_file)
    # ERROR - TeleBot: "A request to the Telegram API was unsuccessful. Error code: 400. Description: Bad Request:
    # file is too big"
    user_photo.close()

    # res = recognize(os.getcwd() + r'\image.png')
    res = 1

    stickerpack_name = 'cat' + uuid.uuid4().hex[0:30] + '_by_sticker_box_bot'

    start_time = time.perf_counter()
    while statuses[message.chat.id] != 'preparing stickerpack':
        if time.perf_counter() - start_time > 120:
            statuses[message.chat.id] = 'timeout'
            return
        time.sleep(1)
    if statuses[message.chat.id] == 'timeout':
        bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–∏, –Ω–æ —è –Ω–µ –º–æ–≥—É –∂–¥–∞—Ç—å —Ç–∞–∫ –¥–æ–ª–≥–æ. –ù–∏—á–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ, —Ç–æ–ª—å–∫–æ –±–∏–∑–Ω–µ—Å.')
        bot.send_message(message.chat.id, '–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /createstickerpack')
        statuses.pop(message.chat.id)
        return
    title = titles[message.chat.id]
    bot.send_message(message.chat.id, '–§–æ—Ä–º–∏—Ä—É—é —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –¥–ª—è —Ç–µ–±—è... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è...')
    # –º–æ–∂–Ω–æ —Ç—É—Ç —Å–∫–∏–Ω—É—Ç—å –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç, —Ç–∏–ø–∞ –∑–∞–±–∞–≤–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞ –∏–ª–∏ –∑–∞–¥–∞—á–∫–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ –∂–¥–∞—Ç—å –ø—Ä–∏–¥–µ—Ç—Å—è –¥–æ–ª–≥–æ
    # –æ, –∏–ª–∏ –º–æ–∂–Ω–æ –∫–∏–¥–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (—Ç–∏–ø–∞ 10% 25% ...)

    # TODO: –ª—É—á—à–µ —ç—Ç–æ—Ç –∫—É—Å–æ–∫ –∫–æ–¥–∞ —Å–¥–µ–ª–∞—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ —Å–∞–º–∏–º –¥–ª—è –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–∏, —á—Ç–æ–±—ã –Ω–∞ –Ω–µ–≥–æ –≤—Ä–µ–º—è –Ω–µ —É—Ö–æ–¥–∏–ª–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑
    bandit = Image.open('stickers/set' + str(res) + '/9.webp')
    bandit = bandit.resize((503, 512), Image.ANTIALIAS)
    bandit.save('stickers/set' + str(res) + '/9.webp')
    bandit.close()
    thumb = Image.open('stickers/set' + str(res) + '/18.webp')
    thumb = thumb.resize((100, 100), Image.ANTIALIAS)
    thumb.save('stickers/set' + str(res) + '/thumb.webp')
    thumb.close()

    bot.create_new_sticker_set(message.chat.id, stickerpack_name, title, emojis[0],
                               open('stickers/set1/1.webp', 'rb'), None)

    for n in range(2, 46):
        if n == 40:
            bot.add_sticker_to_set(message.chat.id, stickerpack_name, emojis[n - 1] + 'üíÅ‚Äç‚ôÇÔ∏è' + 'üíÅ',
                                   open('stickers/set' + str(res) + '/' + str(n) + '.webp', 'rb'), None)
            continue
        if n == 42:
            bot.add_sticker_to_set(message.chat.id, stickerpack_name, emojis[n - 1] + 'üôÖ‚Äç‚ôÇÔ∏è' + 'üôÖ',
                                   open('stickers/set' + str(res) + '/' + str(n) + '.webp', 'rb'), None)
            continue
        if n == 43:
            bot.add_sticker_to_set(message.chat.id, stickerpack_name, emojis[n - 1] + 'üë®‚Äçüíª' + 'üßë‚Äçüíª',
                                   open('stickers/set' + str(res) + '/' + str(n) + '.webp', 'rb'), None)
            continue
        if n == 44:
            bot.add_sticker_to_set(message.chat.id, stickerpack_name, emojis[n - 1] + 'ü§¶‚Äç‚ôÇÔ∏è' + 'ü§¶',
                                   open('stickers/set' + str(res) + '/' + str(n) + '.webp', 'rb'), None)
            continue
        if n == 45:
            bot.add_sticker_to_set(message.chat.id, stickerpack_name, emojis[n - 1] + 'ü§∑‚Äç‚ôÇÔ∏è' + 'ü§∑',
                                   open('stickers/set' + str(res) + '/' + str(n) + '.webp', 'rb'), None)
            continue
        bot.add_sticker_to_set(message.chat.id, stickerpack_name, emojis[n-1],
                               open('stickers/set' + str(res) + '/' + str(n) + '.webp', 'rb'), None)

    # TODO: check what functions return
    thumb = open('stickers/set' + str(res) + '/thumb.webp', 'rb')
    bot.set_sticker_set_thumb(stickerpack_name, message.chat.id, thumb)
    thumb.close()

    link = 'https://telegram.me/addstickers/' + stickerpack_name
    href = "<a href='" + link + "'>" + title + "</a>"
    bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ! –¢–≤–æ–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫: ' + href, parse_mode='HTML')

    statuses.pop(message.chat.id)
    titles.pop(message.chat.id)


# RUN
bot.polling(none_stop=True, timeout=100000)
